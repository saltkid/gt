#!/bin/sh

GT_VERSION="0.0.1-dev"
: "${GT_SEARCH_DIRS:="$HOME/projects/:$HOME/work/:$HOME/.config/"}"


__gt_main() {
  local __gt_exitcode=0
  if ! command -v fzf > /dev/null; then
    echo "ERROR: 'fzf' is not installed"
    __gt_exitcode=1
  elif [ $# -eq 0 ]; then
    __gt_normal
  elif [ "$1" = "-f" ] || [ "$1" = "--fast" ]; then
    __gt_fast
  elif [ "$1" = "-v" ] || [ "$1" = "--version" ]; then
    echo $GT_VERSION
  elif [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    __gt_help
  else
    echo "ERROR: Unknown option: $1"
    __gt_help
  fi
  __gt_clean
  return __gt_exitcode
}

__gt_help() {
  echo '
gt finds local git repos and cd to whichever one is fuzzy selected.
It uses the colon separated $GT_SEARCH_DIRS to search for git repos

Usage: gt [option]
Options:
                 leave empty to use "find"
-f | --fast      uses "fd" instead, with "find" as the fallback
-h | --help      prints this help message
-v | --version   prints the version
'
}

__gt_normal() {
  GT_TARGET=$(
  (
    echo $GT_SEARCH_DIRS | tr ':' '\n' && \
    stdbuf -o0 find -L $(echo $GT_SEARCH_DIRS | tr ':' ' ') -maxdepth 4 -path "*.git" \
    | sed -u 's/\.git//' \
  ) | fzf) 2> /dev/null
  if [ $GT_TARGET ] ; then
    cd $GT_TARGET
  else
    echo "No directory selected"
  fi
}

__gt_fast() {
  # Check if fd is installed
  if ! command -v fd > /dev/null; then
    __gt_normal
    echo "WARN: 'fd' is not installed. used 'find'"
    return
  fi
  GT_TARGET=$(
  (
    echo "$GT_SEARCH_DIRS" | tr ':' '\n' && \
    fd -HILad4 "\.git$" $(echo $GT_SEARCH_DIRS | tr ':' ' ') \
    | sed -u 's/\.git\/\?//' \
  ) | fzf) 2> /dev/null
  if [ $GT_TARGET ] ; then
    cd $GT_TARGET
  else
    echo "No directory selected"
  fi
}

__gt_clean() {
  unset GT_TARGET
  unset GT_TEMP_DIRS
}

__gt_main "$@"
__gt_exitcode=$?
unhash -f __gt_main
unhash -f __gt_help
unhash -f __gt_normal
unhash -f __gt_fast
unhash -f __gt_clean
return $__gt_exitcode
